<div class="modal fade" id="editTopology" tabindex="-1" role="dialog" aria-labelledby="editTopologyTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <section id="modal-error-section" class="d-none">
            <div class="alert alert-danger" role="alert">
                <b>Error:</b> <span id="modal-error-message"></span>
            </div>
        </section>
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editTopologyTitle">Edit Topology: {{details.id}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col">
                        <section>
                            <div class="row">
                                <div class="col">
                                    <form class="mt-2" id="edit-topology-form">
                                        <div class="form-group row">
                                            <label for="name" class="col-sm-2 col-form-label">Name</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="name" name="name" value="{{details.topology.name}}" readonly>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="cron" class="col-sm-2 col-form-label">Cron Pattern</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="cron" name="cron" value="{{details.topology.trigger.timeSpec}}">
                                            </div>
                                        </div>
                                        <div class="task-row card m-2">
                                            <div class="card-header">Task</div>
                                            <div class="card-body text-primary">
                                                <div class="row">
                                                    <div class="col">
                                                        <div class="form-group row">
                                                            <label for="docker" class="col-md-4 col-form-label">Docker Container</label>
                                                            <div class="col-md-8">
                                                                <input type="text" class="form-control" id="docker" name="docker" placeholder="Docker Container tag (URL)" value="{{details.topology.task.executable.url}}"
                                                                       pattern="^(?:(?=[^:\/]{4,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$" required>
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <label for="cpus" class="col-md-4 col-form-label">Number of CPUs</label>
                                                            <div class="col-md-6">
                                                                <input type="range" class="form-control" id="cpus" name="cpus"
                                                                       value="{{getresource "CPU" details.topology.task}}" min="1" max="40"
                                                                       oninput="document.getElementById('cpu-value').textContent = this.value" required>
                                                            </div>
                                                            <div class="col-sm-2">
                                                                <small id="cpu-value">{{getresource "CPU" details.topology.task}}</small>
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <label for="memory" class="col-md-4 col-form-label">Memory (MB)</label>
                                                            <div class="col-md-6">
                                                                <input type="range" class="form-control" id="memory" name="memory" step="128"
                                                                       value="{{getresource "MEMORY" details.topology.task}}" min="128" max="100000"
                                                                       oninput="document.getElementById('memory-value').textContent = formatBytes(parseInt(this.value))" required>
                                                            </div>
                                                            <div class="col-sm-2">
                                                                <small id="memory-value">{{getresource "MEMORY" details.topology.task}}</small>
                                                            </div>
                                                        </div>

                                                        <div class="row p-2">
                                                            <div class="col">
                                                                <div class="row mb-1">
                                                                    <div class="col-sm-10">
                                                                        <h5>Environment Variables</h5>
                                                                    </div>
                                                                    <div class="col-sm-2">
                                                                        <button type="button" class="btn btn-success px-3 env-add">
                                                                            <i class="fa-regular fa-plus" aria-hidden="true"></i>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col env-vars">
                                                                        <div class="form-group row env-row-prototype close-row d-none" id="envRowPrototype">
                                                                            <div class="col-sm-4">
                                                                                <input type="text" class="form-control env-name" name="env-name" placeholder="Variable Name" required>
                                                                            </div>
                                                                            <div class="col-sm-6">
                                                                                <input type="text" class="form-control env-val" name="env-val" placeholder="Variable Value" required>
                                                                            </div>
                                                                            <div class="col-sm-2">
                                                                                <button type="button" class="btn btn-outline-danger px-3 env-delete">
                                                                                    <i class="fa-regular fa-trash-can" aria-hidden="true"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row p-2">
                                                            <div class="col">
                                                                <div class="row mb-1">
                                                                    <div class="col-sm-10">
                                                                        <h5>Volumes</h5>
                                                                    </div>
                                                                    <div class="col-sm-2">
                                                                        <button type="button" class="btn btn-success px-3 vol-add">
                                                                            <i class="fa-regular fa-plus" aria-hidden="true"></i>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col volumes">
                                                                        <div class="form-group row vol-row-prototype close-row d-none" id="volRowPrototype">
                                                                            <div class="col-sm-4">
                                                                                <input type="text" class="form-control vol-host-path" name="host-path" placeholder="Host directory" required>
                                                                            </div>
                                                                            <div class="col-sm-4">
                                                                                <input type="text" class="form-control vol-cont-path" name="cont-path" placeholder="Mount path inside container" required>
                                                                            </div>
                                                                            <div class="col-sm-2">
                                                                                <select class="form-control vol-mode" name="mount-mode">
                                                                                    <option value="READ_ONLY">RO</option>
                                                                                    <option value="READ_WRITE">RW</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="col-sm-2">
                                                                                <button type="button" class="btn btn-outline-danger px-3 vol-delete">
                                                                                    <i class="fa-regular fa-trash-can" aria-hidden="true"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <label for="notifyEmail" class="col-md-4 col-form-label">Notification Email</label>
                                                            <div class="col-md-8">
                                                                <input type="text" class="form-control" id="notifyEmail" name="notifyEmail"
                                                                       value="{{join "," details.topology.notify.emails}}"
                                                                       placeholder="Email IDs to notify on success and failure (comma separated)" required>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submitEditTopology">Save changes</button>
            </div>
        </div>
    </div>
</div>

{{#partial "update_modal_js"}}

    $(document).ready(function() {
        var originalEnvRowCopy = $(".env-row-prototype").clone();
        var originalVolRowCopy = $(".vol-row-prototype").clone();

        $(document).on('click', '.env-add', e => {
            var newRow = originalEnvRowCopy.clone().removeClass("d-none env-row-prototype");
            $(".env-vars").append(newRow);
        });

        $(document).on('click', '.env-delete', e => {
            $(e.currentTarget).parents("#envRowPrototype").remove();
        });

        $(document).on('click', '.vol-add', e => {
            var newRow = originalVolRowCopy.clone().removeClass("d-none vol-row-prototype");
            $(".volumes").append(newRow);
        });

        $(document).on('click', '.vol-delete', e => {
            $(e.currentTarget).parents("#volRowPrototype").remove();
        });

        $('#edit').on('click', function() {
            $(".env-vars").empty();
            $(".volumes").empty();
            {{#each details.topology.task.env}}
                var row = originalEnvRowCopy.clone().removeClass("d-none env-row-prototype");
                row.find(".env-name").val("{{@key}}");
                row.find(".env-val").val("{{this}}");
                $(".env-vars").append(row);
            {{/each}}

            {{#each details.topology.task.volumes}}
                var row = originalVolRowCopy.clone().removeClass("d-none vol-row-prototype");
                row.find(".vol-host-path").val("{{this.pathOnHost}}");
                row.find(".vol-cont-path").val("{{this.pathInContainer}}");
                row.find(".vol-mode").val("{{this.mode}}");
                $(".volumes").append(row);
            {{/each}}

            $('#editTopology').modal('show');
        });
    });

    $('#submitEditTopology').on('click', function(e) {
        e.preventDefault();
        if($('#edit-topology-form').valid()) {
            updateTopology();
        }
    });

    $('#editTopology').on('hidden.bs.modal', function() {
        $("#edit-topology-form")[0].reset();

        // Reset the display for the memory slider
        var memoryValue = $("#memory").val();
        $("#memory-value").text(formatBytes(parseInt(memoryValue)));

        // Reset the display for the cpu slider
        var cpuValue = $("#cpus").val();
        $("#cpu-value").text(cpuValue);
    });

    function updateTopology() {
        const form = document.getElementById('edit-topology-form');
        const inputs = new FormData(form);
        var tdef = {};
        tdef['cron'] = inputs.get('cron');
        tdef['docker'] = inputs.get('docker');
        tdef['cpus'] = parseInt(inputs.get('cpus'));
        tdef['memory'] = parseInt(inputs.get('memory'));
        tdef['notifyEmail'] = inputs.get('notifyEmail');
        const envNames = inputs.getAll('env-name');
        const envValues = inputs.getAll('env-val');
        var env = {};
        for(i = 0; i < envNames.length; i++) {
            env[envNames[i]] = envValues[i];
        }
        tdef['env'] = env;
        var volumes = [];
        const hostPaths = inputs.getAll('host-path');
        const contPaths = inputs.getAll('cont-path');
        const mModes = inputs.getAll('mount-mode');
        for(i = 0; i < hostPaths.length; i++) {
            var volDef = {};
            volDef['pathOnHost'] = hostPaths[i];
            volDef['pathInContainer'] = contPaths[i] ? contPaths[i] : hostPaths[i];
            volDef['mode'] = mModes[i];
            volumes.push(volDef);
        }
        tdef['volumes'] = volumes;
        var xhr = new XMLHttpRequest();
        $.ajax({
            type: 'put',
            url: '/topologies/' + inputs.get('name') + '/update',
            data: JSON.stringify(tdef),
            xhr: function() {
                return xhr;
            },
            contentType: "application/json; charset=utf-8",
            traditional: true,
            success: function (data, status, xhr) {
                console.log("data: "+ JSON.stringify(data));
                if (data.data.redirectUrl) {
                    console.log("we be redirecting: "+ data.data.redirectUrl);
                    alert("Topology updated successfully.");
                    $('#editTopology').modal('hide');
                    window.location.replace(data.data.redirectUrl);
                } else {
                    location.reload();
                }
            },
            error: function (xhr, status, error) {
                var response = xhr.responseJSON;
                var errorMessage = response.message;
                if (response.data && response.data.validationErrors) {
                    errorMessage += "<br>" + response.data.validationErrors.join("<br>");
                }
                if (response.data && response.data.message) {
                    errorMessage += "<br>" + response.data.message;
                }
                $('#modal-error-section').removeClass('d-none').addClass('d-block');
                $('#modal-error-message').html(errorMessage);
                setTimeout(function() {
                    $('#modal-error-section').removeClass('d-block').addClass('d-none');
                }, 5000);
            }
        });
    }
{{/partial}}